def func1(arg1, arg2):
    if arg1 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in [(arg2 + i) ^ i for i in [1 & (8 & i) for i in range(12)]]:
        var7.func3(var8, var8)
    var13 = func6(arg2, arg1)
    if arg2 < arg1:
        var18 = class7()
    else:
        var18 = class9()
    for var19 in range(50):
        var20 = var18.func8
        var20(arg1, var19)
    result = arg1 + 590207007
    return result
class class9(object):
    def func8(self, arg16, arg17):
        result = (1 + -1736405651) & ((arg17 & 2025238646) & 583881253)
        return result
class class7(class9):
    def func8(self, arg14, arg15):
        result = (-2006061682 ^ -1002904825 | -1 | (0 ^ (arg14 - arg14))) & arg15
        return result
def func6(arg9, arg10):
    var11 = 0
    for var12 in range(47):
        var11 += (-6 + arg9) ^ arg9
    return var11
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
